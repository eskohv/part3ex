{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/server.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handler","value","onChange","PersonForm","addPerson","nameHandler","numberHandler","numberValue","nameValue","onSubmit","type","Persons","personsToShow","handle","map","person","key","name","number","onClick","baseUrl","newObject","axios","post","then","response","data","get","id","delete","put","Notification","message","style","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","setStyle","useEffect","serverService","length","toUpperCase","includes","event","console","log","target","preventDefault","personObject","window","alert","updatedPerson","find","confirm","returnedPerson","concat","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2117b1f8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, handler}) =>(\n        <div>\n            filter shown with: <input value={filter} onChange={handler}/>\n        </div>\n    )\n\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = ({addPerson,nameHandler,numberHandler,numberValue,nameValue}) =>{\n    return (\n        <div>\n            <form onSubmit={addPerson}>\n                <div>\n                    name: <input value={nameValue} onChange={nameHandler}/>\n                    <br/>\n                    number: <input value={numberValue} onChange={numberHandler}/>\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import React from \"react\";\n\nconst Persons = ({personsToShow,handle}) => {\n    return (\n        <div>\n            <ul>\n                {personsToShow.map((person) =>\n                    <p\n                        key={person.name}>{person.name} {person.number}\n                        <button onClick={ () => handle(person)}>Delete</button>\n                    </p>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) =>{\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\nexport default {create, getAll, deletePerson, update}","import React from 'react'\n\nconst Notification = ({ message,style }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={style ? \"notification\" : \"error\"}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport serverService from \"./services/server.js\"\nimport \"./index.css\"\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber] = useState('')\n    const [ filter, setFilter] = useState('')\n    const [ notification, setNotification] = useState(null)\n    const [ style, setStyle] = useState(true)\n\n    useEffect(() => {\n        serverService\n            .getAll()\n            .then(response => {\n                setPersons(response)\n            })\n    }, [])\n\n    const handleNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        console.log(event.target.value)\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        console.log(event.target.value)\n        setFilter(event.target.value)\n    }\n\n    const personsToShow = (filter.length === 0)\n        ? persons\n        : persons.filter(person => ((person.name).toUpperCase()).includes(filter.toUpperCase()))\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber,\n        }\n\n        if(\n            (persons.map(person =>\n            person.name))\n            .includes(newName)\n            &&\n            (persons.map(person =>\n                person.number))\n                .includes(newNumber)\n        ){\n            window.alert(`${newName} ${newNumber} is already in the phonebook`)\n\n        } else if (\n            (persons.map(person =>\n            person.name))\n            .includes(newName)\n            &&\n            !(persons.map(person =>\n                person.number))\n                .includes(newNumber)\n        ){\n            const updatedPerson = persons.find(person => person.name === newName)\n            if(window.confirm(`${newName} is already in the phone book, replace the number with a new one?`)){\n                serverService\n                    .update(updatedPerson.id,personObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => person.number !== updatedPerson.number ? person : returnedPerson ))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n            }\n        } else {\n            serverService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setStyle(true)\n                    setNotification(`${returnedPerson.name} was added to the phone book`)\n                    setTimeout(() => {\n                        setNotification(null)\n                    },5000)\n\n                })\n        }\n    }\n\n    const handleDelete = (person) =>{\n        console.log(\"deleting \" + person.id)\n        if(window.confirm(`Are you sure you want to delete ${person.name} ?`)) {\n            serverService\n                .deletePerson(person.id)\n                .then(() => {\n                    serverService\n                        .getAll()\n                        .then(response => {\n                            setPersons(response)\n                        }).catch(error => {\n                            setNotification(`Could not retrieve data`)\n                    })\n                }).catch(error => {\n                    setStyle(false)\n                    setNotification(`Information of ${person.name} has already been removed from the server`)\n                serverService\n                    .getAll()\n                    .then(response => {\n                        setPersons(response)\n                    })\n                })\n        }\n    }\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notification} style={style}/>\n            <Filter handler={handleFilterChange} filter={filter}/>\n            <h3>Add a new entry</h3>\n\n            <PersonForm addPerson={addPerson}\n                        nameValue={newName}\n                        nameHandler={handleNameChange}\n                        numberValue={newNumber}\n                        numberHandler={handleNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons personsToShow={personsToShow} persons={persons} handle={handleDelete}/>\n        </div>\n\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}